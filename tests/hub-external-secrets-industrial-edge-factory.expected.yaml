---
# Source: external-secrets/templates/rolebinding-external-secrets.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rolebinding-devops-externalsecret
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: external-secrets
  namespace: devsecops-ci
---
# Source: external-secrets/templates/policy-git-secret.yaml
# The policy needs to be added to the ACM HUB and then it will be pushed on all clusters
# except the HUB (see placementrule on the bottom)
---
# Source: external-secrets/templates/policy-quayio-registry-secret.yaml
# The policy needs to be added to the ACM HUB and then it will be pushed on all clusters
# except the HUB (see placementrule on the bottom)
---
# Source: external-secrets/templates/policy-reports-nginx-secret.yaml
# The policy needs to be added to the ACM HUB and then it will be pushed on all clusters
# except the HUB (see placementrule on the bottom)
---
# Source: external-secrets/templates/eso-reports-htpasswd.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: reports-nginx-externalsecret
  namespace: devsecops-ci
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: reports-nginx-htpasswd
    template:
      metadata:
      type: Opaque
  dataFrom:
  - extract:
      key: secret/data/hub/devsecops
---
# Source: external-secrets/templates/git-secret.yaml
---
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: git-secret
  namespace: devsecops-ci
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: git-secret
    template:
      metadata:
        annotations:
          # Tekton magic, see https://tekton.dev/vault/pipelines-v0.15.2/auth/
          tekton.dev/git-0: https://github.com/PLAINTEXT
      type: kubernetes.io/basic-auth
  dataFrom:
  - extract:
      key: secret/data/hub/git
---
# Source: external-secrets/templates/image-registry-credentials.yaml
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  # This is the external image registry (e.g. quay.io/docker)
  name: image-registry-credentials
  namespace: devsecops-ci
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: image-registry-credentials
    template:
  dataFrom:
  - extract:
      key: secret/data/hub/imageregistry
